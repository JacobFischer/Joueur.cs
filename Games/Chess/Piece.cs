// Generated by Creer at 03:22AM on December 16, 2015 UTC, git hash: '1b69e788060071d644dd7b8745dca107577844e1'
// A chess piece

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
// <<-- Creer-Merge: usings -->> - Code you add between this comment and the end comment will be preserved between Creer re-runs.
// you can add addtional using(s) here
// <<-- /Creer-Merge: usings -->>

namespace Joueur.cs.Games.Chess
{
    /// <summary>
    /// A chess piece
    /// </summary>
    class Piece : Chess.GameObject
    {
        #region Properties
        /// <summary>
        /// When the piece has been captured (removed from the board) this is true. Otherwise false.
        /// </summary>
        public bool Captured { get; protected set; }

        /// <summary>
        /// The file (y) coordinate of the checker represented as a number [1-8].
        /// </summary>
        public int File { get; protected set; }

        /// <summary>
        /// If the piece has moved from its starting position.
        /// </summary>
        public bool HasMoved { get; protected set; }

        /// <summary>
        /// The player that controls this chess Piece.
        /// </summary>
        public Chess.Player Owner { get; protected set; }

        /// <summary>
        /// The rank (x) coordinate of the checker represented as a letter [a-h].
        /// </summary>
        public string Rank { get; protected set; }

        /// <summary>
        /// The type of chess piece this is, either: 'King', 'Queen', 'Knight', 'Rook', 'Bishop', or 'Pawn'.
        /// </summary>
        public string Type { get; protected set; }


        // <<-- Creer-Merge: properties -->> - Code you add between this comment and the end comment will be preserved between Creer re-runs.
        // you can add addtional properties(s) here. None of them will be tracked or updated by the server.
        // <<-- /Creer-Merge: properties -->>
        #endregion


        #region Methods
        /// <summary>
        /// Creates a new instance of Piece. Used during game initialization, do not call directly.
        /// </summary>
        protected Piece() : base()
        {
        }

        /// <summary>
        /// Moves the piece from its current location to the given rank and file.
        /// </summary>
        /// <param name="rank">The rank (x) coordinate to move to. Must be [a-h].</param>
        /// <param name="file">The file (y) coordinate to move to. Must be [1-8].</param>
        /// <param name="promotionType">If this is a Pawn moving to the end of the board then this parameter is what to promote it to.</param>
        /// <returns>The standard algebraic notation (SAN) representation of the move if successful, empty string otherwise. In addition if you fail your move you lose.</returns>
        public string Move(string rank, int file, string promotionType="")
        {
            return this.RunOnServer<string>("move", new Dictionary<string, object> {
                {"rank", rank},
                {"file", file},
                {"promotionType", promotionType}
            });
        }


        // <<-- Creer-Merge: methods -->> - Code you add between this comment and the end comment will be preserved between Creer re-runs.
        // you can add addtional method(s) here.
        // <<-- /Creer-Merge: methods -->>
        #endregion
    }
}
